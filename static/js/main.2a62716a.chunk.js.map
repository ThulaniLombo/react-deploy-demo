{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","src","Container","Close","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","axios","get","API_KEY","then","response","data","imdbRating","Language","Released","Runtime","Genre","Director","Actors","Plot","Header","AppName","MovieImage","SearchIcon","SearchBox","SearchInput","input","MovieListContainer","Placeholder","App","searchQuery","updateSearchQuery","timeoutId","updateTimeoutId","movieList","updateMovieList","fetchData","searchString","a","console","log","Search","placeholder","value","onChange","event","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a62716a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst MovieContainer = styled.div`\r\n    display:flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    width: 280px;\r\n    box-shadow: 0 4px 10px 0 #aaa;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    height: 383px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n    font-size: 18px;\r\n    font-weiht: 600px;\r\n    color:black;\r\n    margin: 15px 0;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst InfoColumn= styled.div`\r\n    display:flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst MovieInfo= styled.span`\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: black;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nconst MovieComponent = (props) =>{\r\n    const {Title, Year, imdbID, Type, Poster} = props.movie;\r\n\r\n    return (<MovieContainer onClick={() => props.onMovieSelect(imdbID)}>\r\n            <CoverImage src={Poster}/>\r\n            <MovieName>{Title}</MovieName>\r\n            <InfoColumn>\r\n                <MovieInfo>Year: {Year}</MovieInfo>\r\n                <MovieInfo>Type: {Type}</MovieInfo>\r\n            </InfoColumn>\r\n            </MovieContainer>\r\n        );\r\n}\r\nexport default MovieComponent;","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {API_KEY} from'../App';\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-direction: row;\r\n    padding: 20px 30px;\r\n    justify-content: center;\r\n    border-bottom: 2px solid #7a7c80;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    height: 353px;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\n    display:flex;\r\n    flex-direction: column;\r\n    margin: 20px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n    font-size: 22px;\r\n    font-weiht: 600px;\r\n    color:black;\r\n    margin: 15px 0;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst MovieInfo= styled.span`\r\nfont-size: 16px;\r\nfont-weiht: 500px;\r\ncolor:black;\r\nmargin: 4px 0;\r\noverflow: hidden;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\n& span{\r\n    opacity: 0.5;\r\n}\r\n`;\r\n\r\nconst Close = styled.span`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color:black;\r\n    background: lightgray;\r\n    height: fit-content;\r\n    paddin: 8px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n`;\r\n\r\nconst MovieInfoComponent = (props) =>{\r\n    const [movieInfo, setMovieInfo] = useState();\r\n    const {selectedMovie} = props;\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`)\r\n            .then((response) => setMovieInfo(response.data));\r\n        },[selectedMovie]);\r\n\r\n    return <Container>\r\n        {movieInfo?<>\r\n            <CoverImage src={movieInfo?.Poster}/>\r\n            <InfoColumn>\r\n                <MovieName>\r\n                    {movieInfo?.Type}: {movieInfo?.Title}\r\n                </MovieName>   \r\n                <MovieInfo>IMDB Rating: <span>{movieInfo?.imdbRating}</span></MovieInfo>\r\n                <MovieInfo>Year: <span>{movieInfo?.Year}</span></MovieInfo>\r\n                <MovieInfo>Language: <span>{movieInfo?.Language}</span></MovieInfo>\r\n                <MovieInfo>Released: <span>{movieInfo?.Released}</span></MovieInfo>\r\n                <MovieInfo>Runtime: <span>{movieInfo?.Runtime}</span></MovieInfo>\r\n                <MovieInfo>Genre: <span>{movieInfo?.Genre}</span></MovieInfo>\r\n                <MovieInfo>Director: <span>{movieInfo?.Director}</span></MovieInfo>\r\n                <MovieInfo>Actors: <span>{movieInfo?.Actors}</span></MovieInfo>\r\n                <MovieInfo>Plot: <span>{movieInfo?.Plot}</span></MovieInfo>\r\n            </InfoColumn>\r\n    <Close onClick={() => props.onMovieSelect()}>X</Close>\r\n        </>:\"Loading...\"}    \r\n    </Container>\r\n}\r\nexport default MovieInfoComponent;","import { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from'axios';\nimport MovieComponent from './components/MovieComponent';\nimport MovieInfoComponent from './components/MovieInfoComponent';\n\nexport const API_KEY = \"2058eac3\";\n\nconst Container = styled.div`\n  display:flex;\n  flex-direction: column;\n\n`;\n\nconst Header = styled.div`\n  display:flex;\n  flex-direction:row;\n  background-color:black;\n  color:white;\n  padding:10px;\n  font-size: 25px;\n  font-weight:bold;\n  box-shadow: 0 4px 6px 0 #555;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst AppName = styled.div`\n  display:flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MovieImage = styled.img`\n  width:48px;\n  height:48px;\n  margin:15px;\n`;\n\nconst SearchIcon = styled.img`\n  width: 32px;\n  height: 32px\n`;\n\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  background-color: white;\n  border-radius: 6px;\n  margin-left: 20px;\n  width: 50%;\n  align-items: center;\n`;\n\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight:bold;\n  border:none;\n  outline: none;\n  margin-left:15px;\n`;\n\nconst MovieListContainer = styled.div`\n  display:flex;\n  flex-direction:row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap:24px;\n  justify-content: space-evenly;\n`;\n\nconst Placeholder = styled.img`\n  width:120px;\n  height:120px;\n  margin:150px;\n  opacity: 50%;\n`;\n\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState();\n  const [timeoutId, updateTimeoutId] = useState();\n  const [movieList, updateMovieList] = useState();\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const fetchData = async (searchString) =>{\n    const response = await axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`);\n      console.log(response);\n      updateMovieList(response.data.Search);\n  };\n  const onTextChange = (event) =>{\n    clearTimeout(timeoutId);\n    updateSearchQuery(event.target.value);\n    const timeout = setTimeout(() => fetchData(event.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n  return (\n    <Container>\n      <Header>\n      <AppName><MovieImage src=\"/App-icon.jpg\"/>React Movie App</AppName>\n      <SearchBox>\n        <SearchIcon src=\"/search-icon.jpg\"/>\n        <SearchInput placeholder=\"Search Movie\"\n        value={searchQuery}\n        onChange={onTextChange}/>\n      </SearchBox>\n      </Header>\n      {selectedMovie && <MovieInfoComponent \n      selectedMovie={selectedMovie}\n      onMovieSelect={onMovieSelect}\n      />}\n      <MovieListContainer>\n        {movieList?.length? movieList.map((movie, index) => \n        <MovieComponent key={index} \n        movie={movie} \n        onMovieSelect={onMovieSelect}/>)\n        :(<Placeholder src=\"/no-movie-icon.jpg\"/>\n        )}               \n      </MovieListContainer>\n      </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}